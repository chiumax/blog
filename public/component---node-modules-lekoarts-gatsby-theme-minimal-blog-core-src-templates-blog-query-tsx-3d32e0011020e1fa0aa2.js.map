{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-3d32e0011020e1fa0aa2.js","mappings":"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","sources":["webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/components/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\";\nimport { jsx, Box } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\";\n\ntype BlogListItemProps = {\n  post: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  };\n  showTags?: boolean;\n};\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link\n      to={post.slug}\n      sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}\n    >\n      {post.title}\n    </Link>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      <React.Fragment>\n        {` — `}\n        {post.timeToRead} min read\n      </React.Fragment>\n    </p>\n  </Box>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\";\nimport { HeadFC, Link } from \"gatsby\";\n\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\";\nimport Listing from \"@lekoarts/gatsby-theme-minimal-blog/src/components/listing\";\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\";\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\";\nimport Seo from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\";\n\nexport type MBBlogProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n};\n\nconst Blog = ({ posts }: MBBlogProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig();\n\n  return (\n    <Layout>\n      <Listing posts={posts} sx={{ mt: [2, 3] }} />\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nexport const Head: HeadFC = () => <Seo title=\"Blog\" />;\n","import { graphql } from \"gatsby\"\nimport BlogComponent, { Head } from \"../components/blog\"\n\nexport default BlogComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Blog, { Head } from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","post","showTags","jsx","Box","mb","Link","to","slug","sx","t","styles","_t$styles","a","fontSize","color","title","mt","date","tags","React","ItemTags","timeToRead","posts","className","map","BlogListItem","key","tagsPath","basePath","useMinimalBlogConfig","Layout","Listing","Head","Seo","props","data","allPost","Blog","nodes","tag","i","replaceSlashes","name","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","href","withPrefix"],"sourceRoot":""}